name: Deploy to Vercel (Production)

on:
  push:
    branches: [main, master]
  workflow_dispatch: {}

jobs:
  deploy:
    if: ${{ secrets.VERCEL_TOKEN != '' && secrets.VERCEL_ORG_ID != '' && secrets.VERCEL_PROJECT_ID != '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL: ${{ secrets.NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
      SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Pull Vercel Environment Information
        run: npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Build project with Vercel (uses env from runner)
        run: npx vercel build --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (production)
        run: npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"

